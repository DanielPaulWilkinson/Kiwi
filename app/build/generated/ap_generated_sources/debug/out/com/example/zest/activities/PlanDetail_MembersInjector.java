// Generated by Dagger (https://dagger.dev).
package com.example.zest.activities;

import com.example.zest.async.FixedThreadPool;
import com.example.zest.room.repositories.CompleteMealRepository;
import com.example.zest.room.repositories.CompletePlanRepository;
import com.example.zest.room.repositories.MealIngredientJoinRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlanDetail_MembersInjector implements MembersInjector<PlanDetail> {
  private final Provider<CompleteMealRepository> completeMealRepositoryProvider;

  private final Provider<MealIngredientJoinRepository> mealIngredientJoinRepositoryProvider;

  private final Provider<CompletePlanRepository> completePlanRepositoryProvider;

  private final Provider<FixedThreadPool> fixedThreadPoolProvider;

  public PlanDetail_MembersInjector(Provider<CompleteMealRepository> completeMealRepositoryProvider,
      Provider<MealIngredientJoinRepository> mealIngredientJoinRepositoryProvider,
      Provider<CompletePlanRepository> completePlanRepositoryProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider) {
    this.completeMealRepositoryProvider = completeMealRepositoryProvider;
    this.mealIngredientJoinRepositoryProvider = mealIngredientJoinRepositoryProvider;
    this.completePlanRepositoryProvider = completePlanRepositoryProvider;
    this.fixedThreadPoolProvider = fixedThreadPoolProvider;
  }

  public static MembersInjector<PlanDetail> create(
      Provider<CompleteMealRepository> completeMealRepositoryProvider,
      Provider<MealIngredientJoinRepository> mealIngredientJoinRepositoryProvider,
      Provider<CompletePlanRepository> completePlanRepositoryProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider) {
    return new PlanDetail_MembersInjector(completeMealRepositoryProvider, mealIngredientJoinRepositoryProvider, completePlanRepositoryProvider, fixedThreadPoolProvider);
  }

  @Override
  public void injectMembers(PlanDetail instance) {
    injectCompleteMealRepository(instance, completeMealRepositoryProvider.get());
    injectMealIngredientJoinRepository(instance, mealIngredientJoinRepositoryProvider.get());
    injectCompletePlanRepository(instance, completePlanRepositoryProvider.get());
    injectFixedThreadPool(instance, fixedThreadPoolProvider.get());
  }

  @InjectedFieldSignature("com.example.zest.activities.PlanDetail.completeMealRepository")
  public static void injectCompleteMealRepository(PlanDetail instance,
      CompleteMealRepository completeMealRepository) {
    instance.completeMealRepository = completeMealRepository;
  }

  @InjectedFieldSignature("com.example.zest.activities.PlanDetail.mealIngredientJoinRepository")
  public static void injectMealIngredientJoinRepository(PlanDetail instance,
      MealIngredientJoinRepository mealIngredientJoinRepository) {
    instance.mealIngredientJoinRepository = mealIngredientJoinRepository;
  }

  @InjectedFieldSignature("com.example.zest.activities.PlanDetail.completePlanRepository")
  public static void injectCompletePlanRepository(PlanDetail instance,
      CompletePlanRepository completePlanRepository) {
    instance.completePlanRepository = completePlanRepository;
  }

  @InjectedFieldSignature("com.example.zest.activities.PlanDetail.fixedThreadPool")
  public static void injectFixedThreadPool(PlanDetail instance, FixedThreadPool fixedThreadPool) {
    instance.fixedThreadPool = fixedThreadPool;
  }
}
