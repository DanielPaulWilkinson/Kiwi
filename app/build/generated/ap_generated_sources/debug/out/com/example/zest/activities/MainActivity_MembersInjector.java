// Generated by Dagger (https://dagger.dev).
package com.example.zest.activities;

import com.example.zest.async.FixedThreadPool;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<FixedThreadPool> fixedThreadPoolProvider;

  public MainActivity_MembersInjector(Provider<FixedThreadPool> fixedThreadPoolProvider) {
    this.fixedThreadPoolProvider = fixedThreadPoolProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<FixedThreadPool> fixedThreadPoolProvider) {
    return new MainActivity_MembersInjector(fixedThreadPoolProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectFixedThreadPool(instance, fixedThreadPoolProvider.get());
  }

  @InjectedFieldSignature("com.example.zest.activities.MainActivity.fixedThreadPool")
  public static void injectFixedThreadPool(MainActivity instance, FixedThreadPool fixedThreadPool) {
    instance.fixedThreadPool = fixedThreadPool;
  }
}
