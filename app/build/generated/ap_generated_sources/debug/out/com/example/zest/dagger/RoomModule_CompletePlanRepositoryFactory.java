// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import com.example.zest.room.interfaces.CompletePlanDao;
import com.example.zest.room.repositories.CompletePlanRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_CompletePlanRepositoryFactory implements Factory<CompletePlanRepository> {
  private final RoomModule module;

  private final Provider<CompletePlanDao> completePlanDaoProvider;

  public RoomModule_CompletePlanRepositoryFactory(RoomModule module,
      Provider<CompletePlanDao> completePlanDaoProvider) {
    this.module = module;
    this.completePlanDaoProvider = completePlanDaoProvider;
  }

  @Override
  public CompletePlanRepository get() {
    return CompletePlanRepository(module, completePlanDaoProvider.get());
  }

  public static RoomModule_CompletePlanRepositoryFactory create(RoomModule module,
      Provider<CompletePlanDao> completePlanDaoProvider) {
    return new RoomModule_CompletePlanRepositoryFactory(module, completePlanDaoProvider);
  }

  public static CompletePlanRepository CompletePlanRepository(RoomModule instance,
      CompletePlanDao completePlanDao) {
    return Preconditions.checkNotNullFromProvides(instance.CompletePlanRepository(completePlanDao));
  }
}
