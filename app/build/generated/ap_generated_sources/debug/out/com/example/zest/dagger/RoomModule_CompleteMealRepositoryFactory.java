// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import com.example.zest.room.interfaces.CompleteMealDao;
import com.example.zest.room.repositories.CompleteMealRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_CompleteMealRepositoryFactory implements Factory<CompleteMealRepository> {
  private final RoomModule module;

  private final Provider<CompleteMealDao> completeMealDaoProvider;

  public RoomModule_CompleteMealRepositoryFactory(RoomModule module,
      Provider<CompleteMealDao> completeMealDaoProvider) {
    this.module = module;
    this.completeMealDaoProvider = completeMealDaoProvider;
  }

  @Override
  public CompleteMealRepository get() {
    return completeMealRepository(module, completeMealDaoProvider.get());
  }

  public static RoomModule_CompleteMealRepositoryFactory create(RoomModule module,
      Provider<CompleteMealDao> completeMealDaoProvider) {
    return new RoomModule_CompleteMealRepositoryFactory(module, completeMealDaoProvider);
  }

  public static CompleteMealRepository completeMealRepository(RoomModule instance,
      CompleteMealDao completeMealDao) {
    return Preconditions.checkNotNullFromProvides(instance.completeMealRepository(completeMealDao));
  }
}
