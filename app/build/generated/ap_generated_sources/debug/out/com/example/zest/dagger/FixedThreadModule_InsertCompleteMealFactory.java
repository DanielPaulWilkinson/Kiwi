// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import dagger.internal.Factory;
import java.util.concurrent.Callable;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FixedThreadModule_InsertCompleteMealFactory implements Factory<Boolean> {
  private final FixedThreadModule module;

  private final Provider<Callable<Boolean>> callableProvider;

  public FixedThreadModule_InsertCompleteMealFactory(FixedThreadModule module,
      Provider<Callable<Boolean>> callableProvider) {
    this.module = module;
    this.callableProvider = callableProvider;
  }

  @Override
  public Boolean get() {
    return InsertCompleteMeal(module, callableProvider.get());
  }

  public static FixedThreadModule_InsertCompleteMealFactory create(FixedThreadModule module,
      Provider<Callable<Boolean>> callableProvider) {
    return new FixedThreadModule_InsertCompleteMealFactory(module, callableProvider);
  }

  public static boolean InsertCompleteMeal(FixedThreadModule instance, Callable<Boolean> callable) {
    return instance.InsertCompleteMeal(callable);
  }
}
