// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import android.graphics.Bitmap;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImageModule_SaveFactory implements Factory<String> {
  private final ImageModule module;

  private final Provider<String> pathProvider;

  private final Provider<Bitmap> bitmapProvider;

  public ImageModule_SaveFactory(ImageModule module, Provider<String> pathProvider,
      Provider<Bitmap> bitmapProvider) {
    this.module = module;
    this.pathProvider = pathProvider;
    this.bitmapProvider = bitmapProvider;
  }

  @Override
  public String get() {
    return Save(module, pathProvider.get(), bitmapProvider.get());
  }

  public static ImageModule_SaveFactory create(ImageModule module, Provider<String> pathProvider,
      Provider<Bitmap> bitmapProvider) {
    return new ImageModule_SaveFactory(module, pathProvider, bitmapProvider);
  }

  public static String Save(ImageModule instance, String path, Bitmap bitmap) {
    return Preconditions.checkNotNullFromProvides(instance.Save(path, bitmap));
  }
}
