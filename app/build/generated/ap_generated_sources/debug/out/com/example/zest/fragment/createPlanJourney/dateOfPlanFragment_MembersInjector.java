// Generated by Dagger (https://dagger.dev).
package com.example.zest.fragment.createPlanJourney;

import com.example.zest.async.FixedThreadPool;
import com.example.zest.room.repositories.CompletePlanRepository;
import com.example.zest.services.SharedPreferences;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class dateOfPlanFragment_MembersInjector implements MembersInjector<dateOfPlanFragment> {
  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<FixedThreadPool> fixedThreadPoolProvider;

  private final Provider<CompletePlanRepository> completePlanRepositoryProvider;

  public dateOfPlanFragment_MembersInjector(Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider,
      Provider<CompletePlanRepository> completePlanRepositoryProvider) {
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.fixedThreadPoolProvider = fixedThreadPoolProvider;
    this.completePlanRepositoryProvider = completePlanRepositoryProvider;
  }

  public static MembersInjector<dateOfPlanFragment> create(
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider,
      Provider<CompletePlanRepository> completePlanRepositoryProvider) {
    return new dateOfPlanFragment_MembersInjector(sharedPreferencesProvider, fixedThreadPoolProvider, completePlanRepositoryProvider);
  }

  @Override
  public void injectMembers(dateOfPlanFragment instance) {
    injectSharedPreferences(instance, sharedPreferencesProvider.get());
    injectFixedThreadPool(instance, fixedThreadPoolProvider.get());
    injectCompletePlanRepository(instance, completePlanRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.zest.fragment.createPlanJourney.dateOfPlanFragment.sharedPreferences")
  public static void injectSharedPreferences(dateOfPlanFragment instance,
      SharedPreferences sharedPreferences) {
    instance.sharedPreferences = sharedPreferences;
  }

  @InjectedFieldSignature("com.example.zest.fragment.createPlanJourney.dateOfPlanFragment.fixedThreadPool")
  public static void injectFixedThreadPool(dateOfPlanFragment instance,
      FixedThreadPool fixedThreadPool) {
    instance.fixedThreadPool = fixedThreadPool;
  }

  @InjectedFieldSignature("com.example.zest.fragment.createPlanJourney.dateOfPlanFragment.completePlanRepository")
  public static void injectCompletePlanRepository(dateOfPlanFragment instance,
      CompletePlanRepository completePlanRepository) {
    instance.completePlanRepository = completePlanRepository;
  }
}
