// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import com.example.zest.room.interfaces.IngredientsDao;
import com.example.zest.room.repositories.IngredientRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_IngredientRepositoryFactory implements Factory<IngredientRepository> {
  private final RoomModule module;

  private final Provider<IngredientsDao> ingredientsDaoProvider;

  public RoomModule_IngredientRepositoryFactory(RoomModule module,
      Provider<IngredientsDao> ingredientsDaoProvider) {
    this.module = module;
    this.ingredientsDaoProvider = ingredientsDaoProvider;
  }

  @Override
  public IngredientRepository get() {
    return ingredientRepository(module, ingredientsDaoProvider.get());
  }

  public static RoomModule_IngredientRepositoryFactory create(RoomModule module,
      Provider<IngredientsDao> ingredientsDaoProvider) {
    return new RoomModule_IngredientRepositoryFactory(module, ingredientsDaoProvider);
  }

  public static IngredientRepository ingredientRepository(RoomModule instance,
      IngredientsDao ingredientsDao) {
    return Preconditions.checkNotNullFromProvides(instance.ingredientRepository(ingredientsDao));
  }
}
