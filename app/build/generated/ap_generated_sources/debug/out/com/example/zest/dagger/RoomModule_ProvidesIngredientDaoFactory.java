// Generated by Dagger (https://dagger.dev).
package com.example.zest.dagger;

import com.example.zest.room.general.RoomDB;
import com.example.zest.room.interfaces.IngredientsDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvidesIngredientDaoFactory implements Factory<IngredientsDao> {
  private final RoomModule module;

  private final Provider<RoomDB> databaseProvider;

  public RoomModule_ProvidesIngredientDaoFactory(RoomModule module,
      Provider<RoomDB> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public IngredientsDao get() {
    return providesIngredientDao(module, databaseProvider.get());
  }

  public static RoomModule_ProvidesIngredientDaoFactory create(RoomModule module,
      Provider<RoomDB> databaseProvider) {
    return new RoomModule_ProvidesIngredientDaoFactory(module, databaseProvider);
  }

  public static IngredientsDao providesIngredientDao(RoomModule instance, RoomDB database) {
    return Preconditions.checkNotNullFromProvides(instance.providesIngredientDao(database));
  }
}
