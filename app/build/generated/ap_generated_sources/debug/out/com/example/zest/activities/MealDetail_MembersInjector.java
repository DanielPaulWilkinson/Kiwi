// Generated by Dagger (https://dagger.dev).
package com.example.zest.activities;

import com.example.zest.async.FixedThreadPool;
import com.example.zest.room.repositories.CompleteMealRepository;
import com.example.zest.services.ImageProcessing;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MealDetail_MembersInjector implements MembersInjector<MealDetail> {
  private final Provider<CompleteMealRepository> completeMealRepositoryProvider;

  private final Provider<ImageProcessing> imageProcessingProvider;

  private final Provider<FixedThreadPool> fixedThreadPoolProvider;

  public MealDetail_MembersInjector(Provider<CompleteMealRepository> completeMealRepositoryProvider,
      Provider<ImageProcessing> imageProcessingProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider) {
    this.completeMealRepositoryProvider = completeMealRepositoryProvider;
    this.imageProcessingProvider = imageProcessingProvider;
    this.fixedThreadPoolProvider = fixedThreadPoolProvider;
  }

  public static MembersInjector<MealDetail> create(
      Provider<CompleteMealRepository> completeMealRepositoryProvider,
      Provider<ImageProcessing> imageProcessingProvider,
      Provider<FixedThreadPool> fixedThreadPoolProvider) {
    return new MealDetail_MembersInjector(completeMealRepositoryProvider, imageProcessingProvider, fixedThreadPoolProvider);
  }

  @Override
  public void injectMembers(MealDetail instance) {
    injectCompleteMealRepository(instance, completeMealRepositoryProvider.get());
    injectImageProcessing(instance, imageProcessingProvider.get());
    injectFixedThreadPool(instance, fixedThreadPoolProvider.get());
  }

  @InjectedFieldSignature("com.example.zest.activities.MealDetail.completeMealRepository")
  public static void injectCompleteMealRepository(MealDetail instance,
      CompleteMealRepository completeMealRepository) {
    instance.completeMealRepository = completeMealRepository;
  }

  @InjectedFieldSignature("com.example.zest.activities.MealDetail.imageProcessing")
  public static void injectImageProcessing(MealDetail instance, ImageProcessing imageProcessing) {
    instance.imageProcessing = imageProcessing;
  }

  @InjectedFieldSignature("com.example.zest.activities.MealDetail.fixedThreadPool")
  public static void injectFixedThreadPool(MealDetail instance, FixedThreadPool fixedThreadPool) {
    instance.fixedThreadPool = fixedThreadPool;
  }
}
